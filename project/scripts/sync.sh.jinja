#!/usr/bin/env bash
# (C) 2023â€“present Bartosz SÅ‚awecki (bswck)
#
# Sync with bswck/skeleton.
#
# Usage:
# $ poe sync

# BEGIN https://github.com/bswck/skeleton/tree/{{_copier_answers['_commit']}}/handle-task-event.sh
{% filter indent(width=0) %}
{%- include "handle-task-event.sh" -%}
{% endfilter %}
# END https://github.com/bswck/skeleton/tree/{{_copier_answers['_commit']}}/handle-task-event.sh

before() {
    if test "$(git diff --name-only | grep ".*")"
    then
        echo "There are uncommitted changes in the project."
        git stash push --message "Stash before syncing with {{_copier_answers['_src_path']}}"
        DID_STASH=1
    else
        echo "Working tree clean, no need to stash."
    fi
}

update() {
    # TODO(bswck): what PID to use in order to get that from Redis?
    export $PROJECT_PATH_DUMP_DEST=$(mktemp)
    export $LAST_REF_DUMP_DEST=$(mktemp)
    copier update --trust --vcs-ref ${1:-"HEAD"}
    # # I tried this way:
    # COPIER_PPID=$!
    # LAST_REF_KEY=$COPIER_PPID"_skeleton_last_ref"
    # PROJECT_PATH_KEY=$COPIER_PPID"_skeleton_project_path"
    # determine_project_path
    # determine_last_ref
    # # But seems like $COPIER_PID here and in the Redis keys are different.
    $PROJECT_PATH=$(cat $PROJECT_PATH_DUMP_DEST)
    $LAST_REF=$(cat $LAST_REF_DUMP_DEST)
    rm -f $PROJECT_PATH_DUMP_DEST $LAST_REF_DUMP_DEST
}

after() {
    cd "$PROJECT_PATH"

    echo "Previous skeleton revision: $LAST_REF"
    echo "Current skeleton revision: {{_copier_answers['_commit']}}"

    REVISION_PARAGRAPH="Skeleton revision: https://github.com/bswck/skeleton/tree/{{_copier_answers['_commit']}}"

    git add .
    if test "$LAST_REF" = "{{_copier_answers['_commit']}}"
    then
        echo "The version of the skeleton has not changed."
        git commit --no-verify -m "Patch {{_copier_conf.answers_file}} at bswck/skeleton@$LAST_REF" -m "$REVISION_PARAGRAPH"
    else
        git commit --no-verify -m "Upgrade to bswck/skeleton@{{_copier_answers['_commit']}}" -m "$REVISION_PARAGRAPH"
    fi
    git push --no-verify
    echo "Sleeping for 3 seconds..."
    sleep 3
    toggle_workflows
    if test "$DID_STASH"
    then
        echo "Unstashing changes..."
        git stash pop && echo "Done!"
    fi
}

main() {
    cd ${PROJECT_PATH:=$(git rev-parse --show-toplevel)}
    echo
    echo "UPDATE ROUTINE [1/3]: Running pre-update hooks."
    echo "-----------------------------------------------"
    before
    echo "-----------------------------------------------"
    echo "UPDATE ROUTINE [1/3] COMPLETE. âœ…"
    echo
    echo "UPDATE ROUTINE [2/3]: Running the underlying update algorithm."
    echo "--------------------------------------------------------------"
    update
    echo "--------------------------------------------------------------"
    echo "UPDATE ROUTINE [2/3] COMPLETE. âœ…"
    echo
    echo "--- Project path: $PROJECT_PATH"
    echo "--- Last skeleton revision: ${LAST_REF-"N/A"}"
    echo
    echo "UPDATE ROUTINE [3/3]: Running post-update hooks."
    echo "------------------------------------------------"
    after
    echo "------------------------------------------------"
    echo "UPDATE ROUTINE [3/3] COMPLETE. âœ…"
    echo
    echo "Done! ðŸŽ‰"
    echo
    echo "Your repository is now up to date with this bswck/skeleton revision:"
    echo "https://github.com/bswck/skeleton/tree/{{_copier_answers['_commit']}}"
    exit 0
}

main